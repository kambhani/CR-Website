<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/" style="text-decoration: none;">Home</a></li>
    <li class="breadcrumb-item"><a href="/players" style="text-decoration: none;">Players</a></li>
    <li class="breadcrumb-item active" aria-current="page" id="breadcrumb_tag">{{playerStats.tag}}</li>
  </ol>
</nav>

<!-- Tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" role="presentation">
    <a class="nav-link active" id="general-tab" data-toggle="tab" href="#general" role="tab" aria-controls="general"
      aria-selected="true">GENERAL</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" id="battles-tab" data-toggle="tab" href="#battles" role="tab" aria-controls="battles"
      aria-selected="false">BATTLES</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" id="cards-tab" data-toggle="tab" href="#cards" role="tab" aria-controls="cards"
      aria-selected="false">CARDS</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" id="chests-tab" data-toggle="tab" href="#chests" role="tab" aria-controls="chests"
      aria-selected="false">CHESTS</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" id="analysis-tab" data-toggle="tab" href="#analysis" role="tab" aria-controls="analysis"
      aria-selected="false">ANALYSIS</a>
  </li>
</ul>

<!-- Tab panes -->
<div class="tab-content mx-2">
  <div class="tab-pane active mx-4 my-4" id="general" role="tabpanel" aria-labelledby="general-tab">
    <h1>{{playerStats.name}}</h1>
    <div class="card" style="width: 18em; margin: 10px;">
      <img src="https://www.backpacker.com/.image/t_share/MTU2Mzk0NDU5ODQ2NjgxOTAz/23158166954_7643010070_k.jpg"
        class="card-img-top" alt="dog">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">
          Some quick example text to build on the card title and make up the bulk of the card's content.
        </p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
      </div>
    </div>
  </div>

  <div class="tab-pane mx-2 my-4 px-1" id="battles" role="tabpanel" aria-labelledby="battles-tab">
    {{#each playerBattles}}
      {{#if (compare type "!==" "boatBattle")}}
        <div class="card my-4 container-fluid" style="background-color:beige;">
          <div class="container-fluid">
            <h1 class="my-4">{{gameMode.name}}</h1>
            <h2 class="mt-4 mb-3">Team</h2>
            <div>
              <h3>
                <a href="/players/{{removeFirstCharacter team.0.tag}}" class="text-decoration-none">
                  {{team.0.name}} [{{team.0.tag}}]
                </a>
              </h3>
              <div class="container-fluid mx-0 px-0 mt-0">
                <div class="row">
                  {{#each team.0.cards}}
                    <div class="mx-1">
                      <img src={{iconUrls.medium}} class="my-2 battle-cards" alt="{{name}}" width="100" style="">
                      <p class="my-0" style="text-align: center;">Lvl {{calculateCardLevel level maxLevel}}</p>
                    </div>
                  {{/each}}
                </div>
              </div>
            </div>
            <div>
              {{#if team.1.tag}}
                <h3 class="mt-3 mb-2">
                  <a href="/players/{{removeFirstCharacter team.1.tag}}" class="text-decoration-none">
                    {{team.1.name}} [{{team.1.tag}}]
                  </a>
                </h3>
                <div class="container-fluid mx-0 px-0">
                  <div class="row">
                    {{#each team.1.cards}}
                      <div class="mx-1">
                        <img src={{iconUrls.medium}} class="my-2 battle-cards" alt="{{name}}" width="100" style="">
                        <p class="my-0" style="text-align: center;">Lvl {{calculateCardLevel level maxLevel}}</p>
                      </div>
                    {{/each}}
                  </div>
                </div>
              {{/if}}
            </div>
          </div>
          <div class="container-fluid">
            <h2 class="mt-4 mb-3">Opposition</h2>
            <div>
              <h3>
                <a href="/players/{{removeFirstCharacter opponent.0.tag}}" class="text-decoration-none">
                  {{opponent.0.name}} [{{opponent.0.tag}}]
                </a>
              </h3>
              <div class="container-fluid mx-0 px-0">
                <div class="row">
                  {{#each opponent.0.cards}}
                    <div class="mx-1">
                      <img src={{iconUrls.medium}} class="my-2 battle-cards" alt="{{name}}" width="100" style="">
                      <p class="my-0" style="text-align: center;">Lvl {{calculateCardLevel level maxLevel}}</p>
                    </div>
                  {{/each}}
                </div>
              </div>
            </div>
            <div>
              {{#if opponent.1.tag}}
                <h3 class="mt-3 mb-2">
                  <a href="/players/{{removeFirstCharacter opponent.1.tag}}" class="text-decoration-none">
                    {{opponent.1.name}} [{{opponent.1.tag}}]
                  </a>
                </h3>
                <div class="container-fluid mx-0 px-0">
                  <div class="row">
                    {{#each opponent.1.cards}}
                      <div class="mx-1">
                        <img src={{iconUrls.medium}} class="my-2 battle-cards" alt="{{name}}" width="100" style="">
                        <p class="my-0" style="text-align: center;">Lvl {{calculateCardLevel level maxLevel}}</p>
                      </div>
                    {{/each}}
                  </div>
                </div>
              {{/if}}
            </div>
          </div>

          <div class="card-body">
            <h5 class="card-title"><strong>Battle Info</strong></h5>
            <div class="container-fluid mx-0 px-0">
              <div class="row mx-2">
                <div class="col-12 col-sm-6 col-md-3 col-lg-2 mx-1">
                  <h6 class="mb-0"><i>Battle Outcome</i></h6>
                  <p class="mt-0 battle-outcome">{{findVictor team.0.crowns opponent.0.crowns}}</p>
                </div>
                <div class="col-12 col-sm-6 col-md-3 col-lg-2 mx-1">
                  <h6 class="mb-0"><i>Battle Time</i></h6>
                  <p class="mt-0" style="color: darkblue;">{{dateDifference battleTime}}</p>
                </div>
                <div class="col-12 col-sm-6 col-md-3 col-lg-2 mx-1">
                  <h6 class="mb-0"><i>Average Level Difference</i></h6>
                  <p class="mt-0 level-difference">{{levelDifference team.0.cards team.1.cards opponent.0.cards opponent.1.cards}}</p>
                </div>
                {{#if (compare type "===" "PvP")}}
                  <div class="col-12 col-sm-6 col-md-3 col-lg-2 mx-1">
                    <h6 class="mb-0"><i>Trophy Change</i></h6>
                    {{#if team.0.trophyChange}}
                      <p class="mt-0 trophy-change">{{team.0.startingTrophies}} to {{math team.0.startingTrophies "+" team.0.trophyChange}} [{{team.0.trophyChange}}]</p>
                    {{else}}
                      <p class="mt-0 trophy-change">{{team.0.startingTrophies}} to {{team.0.startingTrophies}}</p>
                    {{/if}}
                  </div>
                {{/if}}
              </div>
            </div>
          </div>
        </div>
      {{/if}}
    {{/each}}
  </div>
  <div class="tab-pane mx-4 my-4" id="cards" role="tabpanel" aria-labelledby="cards-tab">
    <div class="container-fluid mx-0 px-0 d-none d-md-block">
      <!--On large screen, cards will appear as individual parts-->
      <div class="row justify-content-center">
        {{#each playerStats.cards}}
          <div class="card mx-2 mb-4 px-3 pb-1 pt-3 bg-light" style="width: 10em;">
            <h5 class="card-title" style="text-align: center; height:50px;">{{name}}</h5>
            <img src="{{iconUrls.medium}}" class="card-img-top" alt="{{name}}">
            <div class="card-body">
              <p class="my-0" style="text-align: center;">Level {{calculateCardLevel level maxLevel}}</p>
              {{#if (compare count "===" 0)}}
                <!--This means that the card in question is at the max level-->
                <p class="my-0" style="text-align: center;">{{findCardsNeeded level maxLevel}}</p>
                <div class="container-fluid mx-0 px-0">
                  <div class="row justify-content-center">
                    {{{loopHTML starLevel "<img src=\"/images/misc/star_points.png\" class = \"mb-0 mt-3 mx-0\" style = \"width: 25px;\" alt=\"star_points_icon\">"}}}
                  </div>
                </div>
              {{else}}
                <p class="my-0" style="text-align: center;">{{count}} / {{findCardsNeeded level maxLevel}}</p>
              {{/if}}
            </div>
          </div>
        {{/each}}
      </div>
    </div>
    <div class="d-block d-md-none">
      <!--On small screens, cards will appear in a table-->
      <table class="table table-bordered table-striped table-sm" style="width: 100%" id="cards_table">
        <thead class="">
          <tr class="thead-dark text-center">
            <th class="align-middle sortable-column" onclick="sortTable(0)">Card Name</th>
            <th class="align-middle">Picture</th>
            <th class="align-middle sortable-column" onclick="sortTable(2)">Current Level</th>
            <th class="align-middle sortable-column" onclick="sortTable(3)">Number of Cards</th>
            <th class="align-middle sortable-column" onclick="sortTable(4)">Star Level</th>
          </tr>
        </thead>
        <tbody>
          {{#each playerStats.cards}}
            <tr class="text-center">
              <td class="align-middle">{{name}}</td>
              <td class="align-middle"><img src="{{iconUrls.medium}}" style="width: 50px;"></td>
              <td class="align-middle">{{calculateCardLevel level maxLevel}}</td>
              {{#if starLevel}}
                <td class="align-middle">{{findCardsNeeded level maxLevel}}</td>
                <td class="align-middle">{{starLevel}}</td>
              {{else}}
                <td class="align-middle">{{count}} / {{findCardsNeeded level maxLevel}}</td>
                <td class="align-middle">n/a</td>
              {{/if}}
            </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>
  <div class="tab-pane mx-4 my-4" id="chests" role="tabpanel" aria-labelledby="chests-tab">
    <div class="container-fluid mx-0 px-0">
      <div class="row">
        {{#each playerChests.items}}
          <div class="mx-3 my-3">
            <img src="/images/chests/{{name}}.png" class="my-2" alt="{{name}}" width="100" style="">
            <p class="my-0" style="text-align: center;">+{{math index "+" 1}}</p>
          </div>
        {{/each}}
      </div>
    </div>
  </div>
  <div class="tab-pane mx-4 my-4" id="analysis" role="tabpanel" aria-labelledby="analysis-tab">5</div>
</div>

<ul>
  <li>{{playerStats.tag}}</li>
  <li>{{playerBattles.0.type}}</li>
  <li>{{playerChests.items.0.name}}</li>
</ul>

<script>
  // playerStats, playerBattles, and playerChests are the three info pieces sent to the HTML document
  $(".battle-cards").css("width", (0.075 * (window.innerWidth - 500) + 75));
  window.onresize = function () {
    $(".battle-cards").css("width", (0.075 * (window.innerWidth - 500) + 75));
  }
  $(".battle-outcome").css("color", function() {
    if($(this).text() === "Defeat") {
      return ("red");
    }
    if($(this).text() === "Victory") {
      return ("green");
    }
    return ("gray");
  });
  $(".level-difference").css("color", function() {
    if(parseFloat($(this).text()) < 0) {
      return ("red");
    }
    if(parseFloat($(this).text()) > 0) {
      return ("green");
    }
    return ("gray");
  });
  $(".trophy-change").css("color", function() {
    if($(this).text().includes("-")) {
      return ("red");
    }
    if(!$(this).text().includes("[")){
      return ("gray");
    }
    return ("green");
  });

  // This code is for the sort feature on the table
  let directions = [1, Number.NEGATIVE_INFINITY, 1, 1, 1];
  function sortTable(n) {
      directions[n] = (directions[n] + 1) % 2;
      let table = document.getElementById("cards_table");
      let newTable;
      let rows = table.rows;
      let dir = directions[n];
      for (let i = 1; i < rows.length - 1; i++) {
          let toAddIndex = i;
          let toAdd;
          if (n === 0) {
            toAdd = rows[i].getElementsByTagName("TD")[n].innerHTML.toLowerCase();
          } else {
            toAdd = rows[i].getElementsByTagName("TD")[n].innerHTML;
            if (n === 2) {
              toAdd = parseInt(toAdd);
            } else if (n === 3) {
              if (toAdd === "MAX") {
                toAdd = 1000000;
              } else {
                toAdd = toAdd.replace("/", "");
                let arr = toAdd.split(" ");
                //console.log(arr);
                toAdd = parseInt(arr[0]) / parseInt(arr[2]);
              }
            } else if (n === 4) {
              if (isNaN(toAdd)) {
                toAdd = 1000000;
              } else {
                toAdd = parseInt(toAdd);
              }
            }
          }
          //console.log(toAdd);
          for (let j = i + 1; j < rows.length; j++) {
              let toCheck;
              if (n === 0) {
                toCheck = rows[j].getElementsByTagName("TD")[n].innerHTML.toLowerCase();
              } else {
                toCheck = rows[j].getElementsByTagName("TD")[n].innerHTML;
                if (n === 2) {
                  toCheck = parseInt(toCheck);
                } else if (n === 3) {
                  if (toCheck === "MAX") {
                    toCheck = 1000000;
                  } else {
                    toCheck = toCheck.replace("/", "");
                    let arr2 = toCheck.split(" ");
                    toCheck = parseInt(arr2[0]) / parseInt(arr2[2]);
                  }
                } else if (n === 4) {
                  if (isNaN(toCheck)) {
                    toCheck = 1000000;
                  } else {
                    toCheck = parseInt(toCheck);
                  }
                }
              }
              if (dir === 0 && toCheck < toAdd) {
                  toAddIndex = j;
                  toAdd = toCheck;
              } else if (dir === 1 && toCheck > toAdd) {
                  toAddIndex = j;
                  toAdd = toCheck;
              }
          }
          if (i !== toAddIndex) {
              rows[i].parentNode.insertBefore(rows[toAddIndex], rows[i]);
              rows[i + 1].parentNode.insertBefore(rows[i + 1], rows[toAddIndex + 1]);
          }
      }
  }
</script>